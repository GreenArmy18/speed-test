/*
	The following mixin is taken and edited from this pen - https://codepen.io/hugo/pen/xzjGB
	I have added outlineColor to allow the addition of a text-shadow outline for the text.
 */

@function pow($number, $exp) {
    $value: 1;
    @if $exp>0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }
    @return $value;
}

@function fact($number) {
    $value: 1;
    @if $number>0 {
        @for $i from 1 through $number {
            $value: $value * $i;
        }
    }
    @return $value;
}

@function pi() {
    @return 3.14159265359;
}

@function rad($angle) {
    $unit: unit($angle);
    $unitless: $angle / ($angle * 0 + 1);
    // If the angle has 'deg' as unit, convert to radians.
    @if $unit==deg {
        $unitless: $unitless / 180 * pi();
    }
    @return $unitless;
}

@function sin($angle) {
    $sin: 0;
    $angle: rad($angle);
    // Iterate a bunch of times.
    @for $i from 0 through 10 {
        $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
    }
    @return $sin;
}

@function cos($angle) {
    $cos: 0;
    $angle: rad($angle);
    // Iterate a bunch of times.
    @for $i from 0 through 10 {
        $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
    }
    @return $cos;
}

@mixin shade($type, $color: #3498db, $borderColor: #fff, $depth: 20, $angle: 135deg, $long: false, $fade: false) {
    $angle: ($angle - 90);
    $x: 1.1 * cos($angle) + 0px;
    $y: 1.1 * sin($angle) + 0px;
    $darken: (lightness($color)/$depth)/2;
    $opacify: 0;
    $shadow: ();
    @if $long==true {
        $darken: 0;
    }
    @if $fade==true {
        $opacify: (opacity($color)/$depth);
        // added this for rendering in some browsers, remove if you like.
        @include translateZ(0);
    }
    @for $i from 1 through $depth {
        $shadow: $shadow, $i*$x $i*$y 0 hsla(hue($color), saturation($color), (lightness($color) - ($i * $darken)), 1 - ($i * $opacify));
    }
    #{$type}-shadow: 1.5px 1.5px 0 $borderColor,
    0px 1.5px 0 $borderColor,
    -1.5px -1.5px 0 $borderColor,
    -1.5px -1.5px 0 $borderColor,
    -1.5px 1.5px 0 $borderColor,
    1.5px -1.5px 0 $borderColor,
    $shadow;
}

//mixin to provide just a basic outline for the text
@mixin outline($color: #fff) {
    text-shadow: 1.5px 1.5px 0 $color, -1.5px -1.5px 0 $color, -1.5px -1.5px 0 $color, -1.5px 1.5px 0 $color, 1.5px -1.5px 0 $color;
}

// Define the fonts used in the Pen
@import url(https://fonts.googleapis.com/css?family=Francois+One);
@import url(https://fonts.googleapis.com/css?family=PT+Sans);
// Define the colors
$grayLight: #cac6c5;
$offWhite: #e7e7e7;
// Outer heading wrapper (for descriptions, not for the actual effects)
.headingWrapper {
    text-align: center;
    background-color: #fff;
    padding: 10px;
}

// default header class â€“ used on all examples
.header {
    display: inline-block;
    text-align: center;
    font-family: 'Francois One', Helvetica, Arial, sans-serif;
    font-size: 96px;
    color: rgba(97, 131, 255, 1);
    text-decoration: none;
    @include outline($grayLight);
    transition: all 400ms ease-in-out;
}

// raising text from page when hovered, so flipped state to header--pushDown class
.header--raiseUp {
    &:hover {
        transform: translate(-9px, -9px);
        @include shade(text, #aaa, #333, 10, 135deg, true);
    }
}